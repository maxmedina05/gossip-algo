#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <unistd.h>

#define CONN_LIMIT 3
#define BUFFER_SIZE 1024
#define PORT 3000

void connectionHandler(int socket);

int main(int argc, char *argv[]){

  int sock;
  struct sockaddr_in server;
  char* message, friendReply[BUFFER_SIZE];
  sock = socket(AF_INET, SOCK_STREAM, 0);
  if(sock == -1) {
    printf("Error: Could not create socket!\n");
    exit(1);
  }

  server.sin_addr.s_addr = inet_addr(argv[1]);
  server.sin_family = AF_INET;
  server.sin_port = htons(PORT);

  if(connect(sock, (struct sockaddr *)&server, sizeof(server)) < 0){
    printf("Error: Could not connect to %s remote server!\n", friendAddr);
    exit(1);
  }
  printf("Connected with %s\n", friendAddr);

  if(send(sock, filepath, strlen(filepath), 0) < 0) {
    printf("Error: Could not send data to remote server!\n");
    exit(1);
  }

  if(recv(sock, friendReply, BUFFER_SIZE, 0) < 0) {
    printf("Error: Something happened trying to received reponse\n");
    exit(1);
  }

  printf("friend %s reply: %s\n",friendAddr, friendReply);
  fflush(stdout);
  close(sock);
  return 0;

  return 0;
}

void connectionHandler(int socket, char* hostIpAddress, char* friends[], int cf) {
  int bytesRecived;
  char recvBuffer[BUFFER_SIZE];
  char message[100];
  sprintf(message, "Connection established with %s host.\n", hostIpAddress);
  // write(socket, message, strlen(message));

  while((bytesRecived = recv(socket, recvBuffer, BUFFER_SIZE, 0)) > 0) {
    recvBuffer[bytesRecived] = '\0';

    printf("recvBuffer: %s\n", recvBuffer);
    if(isFileHere(recvBuffer)) {
      char str[100] = "1 - File was found!\n";
      write(socket , str , strlen(str));
    } else {
      char str[100] = "0 - File was not found!\n";
      write(socket , str , strlen(str));

      // Search on another node
    }
  }

  if(bytesRecived == 0) {
    printf("Client disconnected!\n");
    fflush(stdout);
  }
  else if(bytesRecived == -1)
  {
      printf("recv function failed!\n");
  }
}
